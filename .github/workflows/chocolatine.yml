name: Chocolatine Workflow

on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'

env:
  EXECUTABLES: "a.out"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Coding Style Check
        run: check.sh $(pwd) $(pwd)

      - name: Display Errors
        if: failure()
        run: cat coding-style-reports.log

  check_program_compilation:
    runs-on: ubuntu-latest
    needs: check_coding_style
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Compile Project
        run: timeout 120 make

      - name: Clean Project
        run: make clean

      - name: Verify Executables
        run: |
          for exec in $(echo "$EXECUTABLES" | tr ',' ' '); do
            if [[ ! -x "$exec" ]]; then
              echo "::error::Executable $exec is missing or not executable"
              exit 1
            fi
          done

  run_tests:
    runs-on: ubuntu-latest
    needs: check_program_compilation
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Tests
        run: timeout 120 make tests_run

  push_to_mirror:
    runs-on: ubuntu-latest
    needs: run_tests
    if: github.event_name == 'push'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Mirror to Target Repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
            target_repo_url: ${{secrets.MIRROR_URL}}
            ssh_private_key: ${{secrets.GIT_SSH_PRIVATE_KEY}}

      - name: Push to GitHub Repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
            target_repo_url: git@github.com:${{github.repository}}.git
            ssh_private_key: ${{secrets.GIT_SSH_PRIVATE_KEY}}
